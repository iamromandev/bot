services:
  db:
    platform: linux/arm64
    image: postgres
    hostname: db
    container_name: db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 5430:5432
    volumes:
      - ./data/db:/var/core/postgresql/data
    networks:
      - web
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      start_period: 3s
      interval: 5s
      timeout: 3s
      retries: 3
    restart: on-failure

  web:
    platform: linux/arm64
    hostname: web
    container_name: web
    build:
      context: .
      dockerfile: dockerfile
      target: local
      args:
        ENV: local
        WORK_DIR: /workdir
        PYTHON_VERSION: 3.11.4
    ports:
      - 8000:8000
    links:
      - db
    volumes:
      - .:/workdir
      - ./data/input:/workdir/src/data/input:ro
    networks:
      - web
    depends_on:
      db:
        condition: service_healthy
    command: >
      bash -c "uvicorn src.main:app --reload --workers 1 --host 0.0.0.0 --port 8000"
    restart: unless-stopped

networks:
  web:
    name: web
    driver: bridge